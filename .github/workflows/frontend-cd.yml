name: Frontend Continuous Deployment

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
env:
  # Set Node.js Version
  NODE_VERSION: "20.7.0"

jobs:
  lint:
    runs-on: ubuntu-latest
    continue-on-error: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}
          cache: "npm"
          cache-dependency-path: starter/frontend/package-lock.json

      - name: Install dependencies
        working-directory: starter/frontend
        run: npm ci

      - name: Run lint
        working-directory: starter/frontend
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    continue-on-error: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}
          cache: "npm"
          cache-dependency-path: starter/frontend/package-lock.json

      - name: Install dependencies
        working-directory: starter/frontend
        run: npm ci

      - name: Run Test
        working-directory: starter/frontend
        run: npm run test

  build:
    runs-on: ubuntu-latest
    continue-on-error: false
    if: ${{ always() }}
    needs: [lint, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: movie-pickture
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG --build-arg REACT_APP_MOVIE_API_URL=http://localhost:3000/ .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
